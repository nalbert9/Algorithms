import requests
from requests.auth import HTTPProxyAuth
from requests.adapters import HTTPAdapter
from requests.packages.urllib3.util.ssl_ import create_urllib3_context

# Set your SharePoint URL
sharepoint_url = "https://your-sharepoint-url.com"

# Set your proxy URL
proxy_url = "https://your-proxy-url.com"

# Set the SharePoint file URL
file_url = f"{sharepoint_url}/path/to/your/file.txt"

# Set the path to your PFX certificate file and its password
certificate_path = "path/to/your/certificate.pfx"
certificate_password = "your-certificate-password"

# Set your SharePoint credentials if required
sharepoint_username = "your-sharepoint-username"
sharepoint_password = "your-sharepoint-password"

# Define proxy settings
proxy_settings = {
    'http': proxy_url,
    'https': proxy_url,
}

# Define SharePoint authentication
sharepoint_auth = (sharepoint_username, sharepoint_password)

# Load the PFX certificate
cert = (certificate_path, certificate_password)

# Create a custom SSL context with the certificate
ssl_context = create_urllib3_context()
ssl_context.load_cert_chain(certfile=cert[0], password=cert[1])

# Create a session with the custom SSL context
session = requests.Session()
session.mount('https://', HTTPAdapter(max_retries=3))

# Make the request through the proxy to access SharePoint
try:
    response = session.get(file_url, proxies=proxy_settings, auth=sharepoint_auth, verify=False)

    # Check if the request was successful (status code 200)
    if response.status_code == 200:
        # Save the content to a local file
        with open("local_file.txt", "wb") as local_file:
            local_file.write(response.content)
        print("File successfully downloaded.")
    else:
        print(f"Error accessing SharePoint. Status code: {response.status_code}")

except requests.RequestException as e:
    print(f"Request error: {e}")
finally:
    session.close()
